{
	"openapi": "3.0.3",
	"components": {
		"requestBodies": {
			"PetsCreate": {
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/PetsCreate"
						}
					},
					"application/xml": {
						"schema": {
							"$ref": "#/components/schemas/PetsCreate"
						}
					}
				},
				"description": "Request body for controller.PetsCreate",
				"required": true
			},
			"PetsUpdate": {
				"content": {
					"application/json": {
						"schema": {
							"$ref": "#/components/schemas/PetsUpdate"
						}
					},
					"application/xml": {
						"schema": {
							"$ref": "#/components/schemas/PetsUpdate"
						}
					}
				},
				"description": "Request body for controller.PetsUpdate",
				"required": true
			}
		},
		"schemas": {
			"Pets": {
				"description": "Schema for Pets",
				"properties": {
					"age": {
						"type": "integer"
					},
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					}
				},
				"type": "object"
			},
			"PetsCreate": {
				"description": "Schema for PetsCreate",
				"properties": {
					"age": {
						"type": "integer"
					},
					"name": {
						"type": "string"
					}
				},
				"type": "object"
			},
			"PetsUpdate": {
				"description": "Schema for PetsUpdate",
				"properties": {
					"age": {
						"type": "integer"
					},
					"name": {
						"type": "string"
					}
				},
				"type": "object"
			},
			"unknown-interface": {
				"description": "Schema for unknown-interface"
			}
		}
	},
	"info": {
		"description": "\nThis is the autogenerated OpenAPI documentation for your [Fuego](https://github.com/go-fuego/fuego) API.\n\nBelow is a Fuego Cheatsheet to help you get started. Don't hesitate to check the [Fuego documentation](https://go-fuego.github.io/fuego) for more details.\n\nHappy coding! ðŸ”¥\n\n## Usage\n\n### Route registration\n\n```go\nfunc main() {\n\t// Create a new server\n\ts := fuego.NewServer()\n\n\t// Register some routes\n\tfuego.Post(s, \"/hello\", myController)\n\tfuego.Get(s, \"/myPath\", otherController)\n\tfuego.Put(s, \"/hello\", thirdController)\n\n\tadminRoutes := fuego.Group(s, \"/admin\")\n\tfuego.Use(adminRoutes, myMiddleware) // This middleware (for authentication, etc...) will be available for routes starting by /admin/*, \n\tfuego.Get(adminRoutes, \"/hello\", groupController) // This route will be available at /admin/hello\n\n\t// Start the server\n\ts.Start()\n}\n```\n\n### Basic controller\n\n```go\ntype MyBody struct {\n\tName string `json:\"name\" validate:\"required,max=30\"`\n}\n\ntype MyResponse struct {\n\tAnswer string `json:\"answer\"`\n}\n\nfunc hello(ctx *fuego.ContextWithBody[MyBody]) (*MyResponse, error) {\n\tbody, err := ctx.Body()\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\n\treturn \u0026MyResponse{Answer: \"Hello \" + body.Name}, nil\n}\n```\n\n### Add more details to the route\n\n```go\nfuego.Get(s, \"/hello\", myController).\n\tDescription(\"This is a route that says hello\").\n\tSummary(\"Say hello\").\n```\n",
		"title": "OpenAPI",
		"version": "0.0.1"
	},
	"paths": {
		"/pets/": {
			"get": {
				"description": "controller: `github.com/go-fuego/fuego/examples/petstore/controllers.PetsRessources.getAllPets`\n\n---\n\n",
				"operationId": "GET_/pets/",
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/Pets"
									},
									"type": "array"
								}
							},
							"application/xml": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/Pets"
									},
									"type": "array"
								}
							}
						},
						"description": "OK"
					},
					"default": {
						"description": ""
					}
				},
				"summary": "get all pets",
				"tags": [
					"pets"
				]
			},
			"post": {
				"description": "controller: `github.com/go-fuego/fuego/examples/petstore/controllers.PetsRessources.postPets`\n\n---\n\n",
				"operationId": "POST_/pets/",
				"requestBody": {
					"$ref": "#/components/requestBodies/PetsCreate"
				},
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Pets"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/Pets"
								}
							}
						},
						"description": "OK"
					},
					"default": {
						"description": ""
					}
				},
				"summary": "post pets",
				"tags": [
					"pets"
				]
			}
		},
		"/pets/{id}": {
			"delete": {
				"description": "controller: `github.com/go-fuego/fuego/examples/petstore/controllers.PetsRessources.deletePets`\n\n---\n\n",
				"operationId": "DELETE_/pets/:id",
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/unknown-interface"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/unknown-interface"
								}
							}
						},
						"description": "OK"
					},
					"default": {
						"description": ""
					}
				},
				"summary": "delete pets",
				"tags": [
					"pets"
				]
			},
			"get": {
				"description": "controller: `github.com/go-fuego/fuego/examples/petstore/controllers.PetsRessources.getPets`\n\n---\n\n",
				"operationId": "GET_/pets/:id",
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Pets"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/Pets"
								}
							}
						},
						"description": "OK"
					},
					"default": {
						"description": ""
					}
				},
				"summary": "get pets",
				"tags": [
					"pets"
				]
			},
			"put": {
				"description": "controller: `github.com/go-fuego/fuego/examples/petstore/controllers.PetsRessources.putPets`\n\n---\n\n",
				"operationId": "PUT_/pets/:id",
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"$ref": "#/components/requestBodies/PetsUpdate"
				},
				"responses": {
					"200": {
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Pets"
								}
							},
							"application/xml": {
								"schema": {
									"$ref": "#/components/schemas/Pets"
								}
							}
						},
						"description": "OK"
					},
					"default": {
						"description": ""
					}
				},
				"summary": "put pets",
				"tags": [
					"pets"
				]
			}
		}
	},
	"servers": [
		{
			"description": "local server",
			"url": "http://localhost:9999"
		}
	],
	"tags": [
		{
			"name": "pets"
		}
	]
}